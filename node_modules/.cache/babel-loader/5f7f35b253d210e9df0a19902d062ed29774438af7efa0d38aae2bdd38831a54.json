{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Didi\\\\login-react\\\\src\\\\auth\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport { auth, db } from '../firebase/config';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { doc, setDoc, getDoc, serverTimestamp } from 'firebase/firestore';\n\n// Creamos y exportamos el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Hook personalizado para usar el contexto\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Registrar nuevo usuario (solo para admins)\n  const register = async (email, password, additionalData) => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      await setDoc(doc(db, \"users\", userCredential.user.uid), {\n        ...additionalData,\n        email,\n        createdAt: serverTimestamp(),\n        lastLogin: null,\n        role: additionalData.role || 'user'\n      });\n      return userCredential.user;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Iniciar sesión\n  const login = async (email, password) => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n\n      // Actualizar último login\n      await setDoc(doc(db, \"users\", userCredential.user.uid), {\n        lastLogin: serverTimestamp()\n      }, {\n        merge: true\n      });\n      return userCredential.user;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Cerrar sesión\n  const logout = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Verificar si es admin\n  const isAdmin = () => {\n    return (userData === null || userData === void 0 ? void 0 : userData.role) === 'admin';\n  };\n\n  // Cargar datos del usuario\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      if (user) {\n        try {\n          const userDoc = await getDoc(doc(db, \"users\", user.uid));\n          setUserData(userDoc.data());\n        } catch (error) {\n          console.error(\"Error cargando datos del usuario:\", error);\n        }\n      } else {\n        setUserData(null);\n      }\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    userData,\n    loading,\n    register,\n    login,\n    logout,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"r83hwWaD25hIL02HF7xJwU/65pM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","auth","db","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","doc","setDoc","getDoc","serverTimestamp","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","userData","setUserData","loading","setLoading","register","email","password","additionalData","userCredential","user","uid","createdAt","lastLogin","role","error","login","merge","logout","isAdmin","unsubscribe","userDoc","data","console","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Didi/login-react/src/auth/AuthContext.js"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\r\nimport { auth, db } from '../firebase/config';\r\nimport { \r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged\r\n} from 'firebase/auth';\r\nimport { doc, setDoc, getDoc, serverTimestamp } from 'firebase/firestore';\r\n\r\n// Creamos y exportamos el contexto\r\nexport const AuthContext = createContext();\r\n\r\n// Hook personalizado para usar el contexto\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [userData, setUserData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Registrar nuevo usuario (solo para admins)\r\n  const register = async (email, password, additionalData) => {\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      \r\n      await setDoc(doc(db, \"users\", userCredential.user.uid), {\r\n        ...additionalData,\r\n        email,\r\n        createdAt: serverTimestamp(),\r\n        lastLogin: null,\r\n        role: additionalData.role || 'user'\r\n      });\r\n      \r\n      return userCredential.user;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Iniciar sesión\r\n  const login = async (email, password) => {\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      \r\n      // Actualizar último login\r\n      await setDoc(\r\n        doc(db, \"users\", userCredential.user.uid),\r\n        { lastLogin: serverTimestamp() },\r\n        { merge: true }\r\n      );\r\n      \r\n      return userCredential.user;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Cerrar sesión\r\n  const logout = async () => {\r\n    try {\r\n      await signOut(auth);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Verificar si es admin\r\n  const isAdmin = () => {\r\n    return userData?.role === 'admin';\r\n  };\r\n\r\n  // Cargar datos del usuario\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        try {\r\n          const userDoc = await getDoc(doc(db, \"users\", user.uid));\r\n          setUserData(userDoc.data());\r\n        } catch (error) {\r\n          console.error(\"Error cargando datos del usuario:\", error);\r\n        }\r\n      } else {\r\n        setUserData(null);\r\n      }\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    userData,\r\n    loading,\r\n    register,\r\n    login,\r\n    logout,\r\n    isAdmin\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}