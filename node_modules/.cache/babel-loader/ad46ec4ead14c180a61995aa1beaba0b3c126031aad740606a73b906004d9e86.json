{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Didi\\\\login-react\\\\src\\\\auth\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport { auth, db } from '../firebase/config';\nimport { createUserWithEmailAndPassword, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { doc, getDoc, setDoc, serverTimestamp } from 'firebase/firestore';\n\n// Crear contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Hook personalizado para acceder al contexto\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userData, setUserData] = useState(null); // Datos del usuario (rol)\n  const [loading, setLoading] = useState(true);\n\n  // Registrar nuevo usuario (solo para admins)\n  const registerUser = async (email, password, name, role = 'user') => {\n    if (!isAdmin()) throw new Error('Solo administradores pueden registrar usuarios');\n    try {\n      // Crear usuario en Authentication\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n\n      // Guardar datos en Firestore\n      await setDoc(doc(db, \"users\", userCredential.user.uid), {\n        email,\n        name,\n        role,\n        createdAt: serverTimestamp(),\n        lastLogin: null\n      });\n      return userCredential.user;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Verificar si es admin\n  const isAdmin = () => {\n    return (userData === null || userData === void 0 ? void 0 : userData.role) === 'admin';\n  };\n\n  // Cerrar sesi贸n\n  const logout = async () => {\n    await signOut(auth);\n  };\n\n  // Cargar datos del usuario al iniciar sesi贸n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      if (user) {\n        // Obtener datos adicionales de Firestore\n        const userDoc = await getDoc(doc(db, \"users\", user.uid));\n        setUserData(userDoc.data());\n      } else {\n        setUserData(null);\n      }\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      userData,\n      isAdmin,\n      registerUser,\n      logout,\n      loading\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"r83hwWaD25hIL02HF7xJwU/65pM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","auth","db","createUserWithEmailAndPassword","onAuthStateChanged","signOut","doc","getDoc","setDoc","serverTimestamp","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","userData","setUserData","loading","setLoading","registerUser","email","password","name","role","isAdmin","Error","userCredential","user","uid","createdAt","lastLogin","error","logout","unsubscribe","userDoc","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Didi/login-react/src/auth/AuthContext.js"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\r\nimport { auth, db } from '../firebase/config';\r\nimport { \r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut \r\n} from 'firebase/auth';\r\nimport { doc, getDoc, setDoc, serverTimestamp } from 'firebase/firestore';\r\n\r\n// Crear contexto\r\nconst AuthContext = createContext();\r\n\r\n// Hook personalizado para acceder al contexto\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [userData, setUserData] = useState(null); // Datos del usuario (rol)\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Registrar nuevo usuario (solo para admins)\r\n  const registerUser = async (email, password, name, role = 'user') => {\r\n    if (!isAdmin()) throw new Error('Solo administradores pueden registrar usuarios');\r\n\r\n    try {\r\n      // Crear usuario en Authentication\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      \r\n      // Guardar datos en Firestore\r\n      await setDoc(doc(db, \"users\", userCredential.user.uid), {\r\n        email,\r\n        name,\r\n        role,\r\n        createdAt: serverTimestamp(),\r\n        lastLogin: null,\r\n      });\r\n      \r\n      return userCredential.user;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Verificar si es admin\r\n  const isAdmin = () => {\r\n    return userData?.role === 'admin';\r\n  };\r\n\r\n  // Cerrar sesi贸n\r\n  const logout = async () => {\r\n    await signOut(auth);\r\n  };\r\n\r\n  // Cargar datos del usuario al iniciar sesi贸n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        // Obtener datos adicionales de Firestore\r\n        const userDoc = await getDoc(doc(db, \"users\", user.uid));\r\n        setUserData(userDoc.data());\r\n      } else {\r\n        setUserData(null);\r\n      }\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n      currentUser,\r\n      userData,\r\n      isAdmin,\r\n      registerUser,\r\n      logout,\r\n      loading\r\n    }}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,IAAI,EAAEC,EAAE,QAAQ,oBAAoB;AAC7C,SACEC,8BAA8B,EAC9BC,kBAAkB,EAClBC,OAAO,QACF,eAAe;AACtB,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,eAAe,QAAQ,oBAAoB;;AAEzE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGb,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,SAASc,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAOd,UAAU,CAACY,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM2B,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,IAAI,GAAG,MAAM,KAAK;IACnE,IAAI,CAACC,OAAO,CAAC,CAAC,EAAE,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;IAEjF,IAAI;MACF;MACA,MAAMC,cAAc,GAAG,MAAM5B,8BAA8B,CAACF,IAAI,EAAEwB,KAAK,EAAEC,QAAQ,CAAC;;MAElF;MACA,MAAMlB,MAAM,CAACF,GAAG,CAACJ,EAAE,EAAE,OAAO,EAAE6B,cAAc,CAACC,IAAI,CAACC,GAAG,CAAC,EAAE;QACtDR,KAAK;QACLE,IAAI;QACJC,IAAI;QACJM,SAAS,EAAEzB,eAAe,CAAC,CAAC;QAC5B0B,SAAS,EAAE;MACb,CAAC,CAAC;MAEF,OAAOJ,cAAc,CAACC,IAAI;IAC5B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMP,OAAO,GAAGA,CAAA,KAAM;IACpB,OAAO,CAAAT,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEQ,IAAI,MAAK,OAAO;EACnC,CAAC;;EAED;EACA,MAAMS,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMhC,OAAO,CAACJ,IAAI,CAAC;EACrB,CAAC;;EAED;EACAH,SAAS,CAAC,MAAM;IACd,MAAMwC,WAAW,GAAGlC,kBAAkB,CAACH,IAAI,EAAE,MAAO+B,IAAI,IAAK;MAC3D,IAAIA,IAAI,EAAE;QACR;QACA,MAAMO,OAAO,GAAG,MAAMhC,MAAM,CAACD,GAAG,CAACJ,EAAE,EAAE,OAAO,EAAE8B,IAAI,CAACC,GAAG,CAAC,CAAC;QACxDZ,WAAW,CAACkB,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;MAC7B,CAAC,MAAM;QACLnB,WAAW,CAAC,IAAI,CAAC;MACnB;MACAF,cAAc,CAACa,IAAI,CAAC;MACpBT,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEF,OAAOe,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE3B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAC3BxB,WAAW;MACXE,QAAQ;MACRS,OAAO;MACPL,YAAY;MACZa,MAAM;MACNf;IACF,CAAE;IAAAN,QAAA,EACC,CAACM,OAAO,IAAIN;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B;AAAC7B,GAAA,CAnEeF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}