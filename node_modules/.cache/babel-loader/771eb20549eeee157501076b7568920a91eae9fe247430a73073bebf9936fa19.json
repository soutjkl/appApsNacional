{"ast":null,"code":"const fetchUserData = async uid => {\n  try {\n    console.log(`Buscando datos para UID: ${uid}`); // Depuración\n    const userDocRef = doc(db, 'users', uid);\n    const userDoc = await getDoc(userDocRef);\n    if (!userDoc.exists()) {\n      console.error(`No existe documento para UID: ${uid}`);\n      return null;\n    }\n    const data = userDoc.data();\n    console.log(\"Datos encontrados:\", data); // Depuración\n\n    // Validación de campos obligatorios\n    if (!data.email || !data.name || !data.lastName) {\n      console.error(\"Documento existe pero falta información requerida\");\n      return null;\n    }\n    return {\n      name: data.name,\n      lastName: data.lastName,\n      role: data.role || 'user',\n      email: data.email\n    };\n  } catch (error) {\n    console.error(`Error al obtener datos para UID ${uid}:`, error);\n    return null;\n  }\n};\nconst login = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    console.log(\"UID del usuario autenticado:\", userCredential.user.uid); // Depuración\n\n    const additionalData = await fetchUserData(userCredential.user.uid);\n    if (!additionalData) {\n      throw new Error(\"No se encontraron datos adicionales del usuario\");\n    }\n\n    // Verificar coincidencia de emails\n    if (additionalData.email !== email) {\n      console.error(`Discrepancia de email: Auth=${email}, Firestore=${additionalData.email}`);\n      throw new Error(\"Inconsistencia en los datos del usuario\");\n    }\n    const userWithData = {\n      uid: userCredential.user.uid,\n      email: email,\n      name: additionalData.name,\n      lastName: additionalData.lastName,\n      role: additionalData.role\n    };\n    console.log(\"Usuario autenticado con datos:\", userWithData);\n    return {\n      success: true,\n      user: userWithData\n    };\n  } catch (error) {\n    console.error(\"Error en login:\", error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};","map":{"version":3,"names":["fetchUserData","uid","console","log","userDocRef","doc","db","userDoc","getDoc","exists","error","data","email","name","lastName","role","login","password","userCredential","signInWithEmailAndPassword","auth","user","additionalData","Error","userWithData","success","message"],"sources":["C:/Users/Didi/login-react/src/auth/AuthContext.js"],"sourcesContent":["const fetchUserData = async (uid) => {\r\n  try {\r\n    console.log(`Buscando datos para UID: ${uid}`); // Depuración\r\n    const userDocRef = doc(db, 'users', uid);\r\n    const userDoc = await getDoc(userDocRef);\r\n    \r\n    if (!userDoc.exists()) {\r\n      console.error(`No existe documento para UID: ${uid}`);\r\n      return null;\r\n    }\r\n    \r\n    const data = userDoc.data();\r\n    console.log(\"Datos encontrados:\", data); // Depuración\r\n    \r\n    // Validación de campos obligatorios\r\n    if (!data.email || !data.name || !data.lastName) {\r\n      console.error(\"Documento existe pero falta información requerida\");\r\n      return null;\r\n    }\r\n    \r\n    return {\r\n      name: data.name,\r\n      lastName: data.lastName,\r\n      role: data.role || 'user',\r\n      email: data.email\r\n    };\r\n  } catch (error) {\r\n    console.error(`Error al obtener datos para UID ${uid}:`, error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst login = async (email, password) => {\r\n  try {\r\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n    console.log(\"UID del usuario autenticado:\", userCredential.user.uid); // Depuración\r\n    \r\n    const additionalData = await fetchUserData(userCredential.user.uid);\r\n    \r\n    if (!additionalData) {\r\n      throw new Error(\"No se encontraron datos adicionales del usuario\");\r\n    }\r\n\r\n    // Verificar coincidencia de emails\r\n    if (additionalData.email !== email) {\r\n      console.error(`Discrepancia de email: Auth=${email}, Firestore=${additionalData.email}`);\r\n      throw new Error(\"Inconsistencia en los datos del usuario\");\r\n    }\r\n\r\n    const userWithData = {\r\n      uid: userCredential.user.uid,\r\n      email: email,\r\n      name: additionalData.name,\r\n      lastName: additionalData.lastName,\r\n      role: additionalData.role\r\n    };\r\n\r\n    console.log(\"Usuario autenticado con datos:\", userWithData);\r\n    return { \r\n      success: true, \r\n      user: userWithData\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error en login:\", error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,aAAa,GAAG,MAAOC,GAAG,IAAK;EACnC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,4BAA4BF,GAAG,EAAE,CAAC,CAAC,CAAC;IAChD,MAAMG,UAAU,GAAGC,GAAG,CAACC,EAAE,EAAE,OAAO,EAAEL,GAAG,CAAC;IACxC,MAAMM,OAAO,GAAG,MAAMC,MAAM,CAACJ,UAAU,CAAC;IAExC,IAAI,CAACG,OAAO,CAACE,MAAM,CAAC,CAAC,EAAE;MACrBP,OAAO,CAACQ,KAAK,CAAC,iCAAiCT,GAAG,EAAE,CAAC;MACrD,OAAO,IAAI;IACb;IAEA,MAAMU,IAAI,GAAGJ,OAAO,CAACI,IAAI,CAAC,CAAC;IAC3BT,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEQ,IAAI,CAAC,CAAC,CAAC;;IAEzC;IACA,IAAI,CAACA,IAAI,CAACC,KAAK,IAAI,CAACD,IAAI,CAACE,IAAI,IAAI,CAACF,IAAI,CAACG,QAAQ,EAAE;MAC/CZ,OAAO,CAACQ,KAAK,CAAC,mDAAmD,CAAC;MAClE,OAAO,IAAI;IACb;IAEA,OAAO;MACLG,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;MACvBC,IAAI,EAAEJ,IAAI,CAACI,IAAI,IAAI,MAAM;MACzBH,KAAK,EAAED,IAAI,CAACC;IACd,CAAC;EACH,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,mCAAmCT,GAAG,GAAG,EAAES,KAAK,CAAC;IAC/D,OAAO,IAAI;EACb;AACF,CAAC;AAED,MAAMM,KAAK,GAAG,MAAAA,CAAOJ,KAAK,EAAEK,QAAQ,KAAK;EACvC,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMC,0BAA0B,CAACC,IAAI,EAAER,KAAK,EAAEK,QAAQ,CAAC;IAC9Ef,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEe,cAAc,CAACG,IAAI,CAACpB,GAAG,CAAC,CAAC,CAAC;;IAEtE,MAAMqB,cAAc,GAAG,MAAMtB,aAAa,CAACkB,cAAc,CAACG,IAAI,CAACpB,GAAG,CAAC;IAEnE,IAAI,CAACqB,cAAc,EAAE;MACnB,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;IACpE;;IAEA;IACA,IAAID,cAAc,CAACV,KAAK,KAAKA,KAAK,EAAE;MAClCV,OAAO,CAACQ,KAAK,CAAC,+BAA+BE,KAAK,eAAeU,cAAc,CAACV,KAAK,EAAE,CAAC;MACxF,MAAM,IAAIW,KAAK,CAAC,yCAAyC,CAAC;IAC5D;IAEA,MAAMC,YAAY,GAAG;MACnBvB,GAAG,EAAEiB,cAAc,CAACG,IAAI,CAACpB,GAAG;MAC5BW,KAAK,EAAEA,KAAK;MACZC,IAAI,EAAES,cAAc,CAACT,IAAI;MACzBC,QAAQ,EAAEQ,cAAc,CAACR,QAAQ;MACjCC,IAAI,EAAEO,cAAc,CAACP;IACvB,CAAC;IAEDb,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEqB,YAAY,CAAC;IAC3D,OAAO;MACLC,OAAO,EAAE,IAAI;MACbJ,IAAI,EAAEG;IACR,CAAC;EACH,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,OAAO;MAAEe,OAAO,EAAE,KAAK;MAAEf,KAAK,EAAEA,KAAK,CAACgB;IAAQ,CAAC;EACjD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}