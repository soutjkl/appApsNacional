{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Didi\\\\login-react\\\\src\\\\auth\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { auth, db, doc, setDoc, getDoc, signInWithEmailAndPassword, signOut, createUserWithEmailAndPassword, onAuthStateChanged } from '../firebase/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [usersList, setUsersList] = useState([]);\n  const fetchUserData = async uid => {\n    const userDoc = await getDoc(doc(db, 'users', uid));\n    return userDoc.exists() ? userDoc.data() : null;\n  };\n  const fetchAllUsers = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, 'users'));\n      const users = [];\n      querySnapshot.forEach(doc => {\n        users.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setUsersList(users);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const additionalData = await fetchUserData(userCredential.user.uid);\n      const userInfo = {\n        ...userCredential.user,\n        role: (additionalData === null || additionalData === void 0 ? void 0 : additionalData.role) || 'user',\n        name: (additionalData === null || additionalData === void 0 ? void 0 : additionalData.name) || email.split('@')[0]\n      };\n      setUser(userInfo);\n      setUserData(additionalData);\n      return {\n        success: true,\n        user: userInfo\n      };\n    } catch (error) {\n      let errorMessage = 'Error al iniciar sesión';\n      switch (error.code) {\n        case 'auth/user-not-found':\n          errorMessage = 'Usuario no encontrado';\n          break;\n        case 'auth/wrong-password':\n          errorMessage = 'Contraseña incorrecta';\n          break;\n        case 'auth/too-many-requests':\n          errorMessage = 'Demasiados intentos. Cuenta temporalmente bloqueada';\n          break;\n      }\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      setUser(null);\n      setUserData(null);\n    } catch (error) {\n      console.error(\"Error al cerrar sesión:\", error);\n    }\n  };\n  const register = async (email, password, additionalData = {}) => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      await setDoc(doc(db, 'users', userCredential.user.uid), {\n        email: email,\n        role: additionalData.role || 'user',\n        name: additionalData.name || email.split('@')[0],\n        createdAt: new Date().toISOString(),\n        ...additionalData\n      });\n      const newUser = {\n        ...userCredential.user,\n        role: additionalData.role || 'user',\n        name: additionalData.name || email.split('@')[0]\n      };\n      return {\n        success: true,\n        user: newUser\n      };\n    } catch (error) {\n      let errorMessage = 'Error al registrar usuario';\n      switch (error.code) {\n        case 'auth/email-already-in-use':\n          errorMessage = 'El email ya está registrado';\n          break;\n        case 'auth/weak-password':\n          errorMessage = 'La contraseña debe tener al menos 6 caracteres';\n          break;\n        case 'auth/invalid-email':\n          errorMessage = 'Email inválido';\n          break;\n      }\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async currentUser => {\n      if (currentUser) {\n        const additionalData = await fetchUserData(currentUser.uid);\n        const userInfo = {\n          ...currentUser,\n          role: (additionalData === null || additionalData === void 0 ? void 0 : additionalData.role) || 'user',\n          name: (additionalData === null || additionalData === void 0 ? void 0 : additionalData.name) || currentUser.email.split('@')[0]\n        };\n        setUser(userInfo);\n        setUserData(additionalData);\n        fetchAllUsers();\n      } else {\n        setUser(null);\n        setUserData(null);\n      }\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n  const value = {\n    user,\n    userData,\n    users: usersList,\n    loading,\n    login,\n    logout,\n    register,\n    fetchAllUsers,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin',\n    refreshUsers: fetchAllUsers\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"cY5PmIezbYs+P15OoMsrBOWU1/U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","auth","db","doc","setDoc","getDoc","signInWithEmailAndPassword","signOut","createUserWithEmailAndPassword","onAuthStateChanged","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","userData","setUserData","loading","setLoading","usersList","setUsersList","fetchUserData","uid","userDoc","exists","data","fetchAllUsers","querySnapshot","getDocs","collection","users","forEach","push","id","error","console","login","email","password","userCredential","additionalData","userInfo","role","name","split","success","errorMessage","code","logout","register","createdAt","Date","toISOString","newUser","unsubscribe","currentUser","value","isAuthenticated","isAdmin","refreshUsers","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Didi/login-react/src/auth/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { \r\n  auth,\r\n  db,\r\n  doc,\r\n  setDoc,\r\n  getDoc,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged\r\n} from '../firebase/config';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [userData, setUserData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [usersList, setUsersList] = useState([]);\r\n\r\n  const fetchUserData = async (uid) => {\r\n    const userDoc = await getDoc(doc(db, 'users', uid));\r\n    return userDoc.exists() ? userDoc.data() : null;\r\n  };\r\n\r\n  const fetchAllUsers = async () => {\r\n    try {\r\n      const querySnapshot = await getDocs(collection(db, 'users'));\r\n      const users = [];\r\n      querySnapshot.forEach((doc) => {\r\n        users.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      setUsersList(users);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const additionalData = await fetchUserData(userCredential.user.uid);\r\n      \r\n      const userInfo = {\r\n        ...userCredential.user,\r\n        role: additionalData?.role || 'user',\r\n        name: additionalData?.name || email.split('@')[0]\r\n      };\r\n      \r\n      setUser(userInfo);\r\n      setUserData(additionalData);\r\n      \r\n      return { \r\n        success: true, \r\n        user: userInfo\r\n      };\r\n    } catch (error) {\r\n      let errorMessage = 'Error al iniciar sesión';\r\n      switch (error.code) {\r\n        case 'auth/user-not-found':\r\n          errorMessage = 'Usuario no encontrado';\r\n          break;\r\n        case 'auth/wrong-password':\r\n          errorMessage = 'Contraseña incorrecta';\r\n          break;\r\n        case 'auth/too-many-requests':\r\n          errorMessage = 'Demasiados intentos. Cuenta temporalmente bloqueada';\r\n          break;\r\n      }\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      setUser(null);\r\n      setUserData(null);\r\n    } catch (error) {\r\n      console.error(\"Error al cerrar sesión:\", error);\r\n    }\r\n  };\r\n\r\n  const register = async (email, password, additionalData = {}) => {\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      \r\n      await setDoc(doc(db, 'users', userCredential.user.uid), {\r\n        email: email,\r\n        role: additionalData.role || 'user',\r\n        name: additionalData.name || email.split('@')[0],\r\n        createdAt: new Date().toISOString(),\r\n        ...additionalData\r\n      });\r\n\r\n      const newUser = {\r\n        ...userCredential.user,\r\n        role: additionalData.role || 'user',\r\n        name: additionalData.name || email.split('@')[0]\r\n      };\r\n      \r\n      return { \r\n        success: true, \r\n        user: newUser \r\n      };\r\n    } catch (error) {\r\n      let errorMessage = 'Error al registrar usuario';\r\n      switch (error.code) {\r\n        case 'auth/email-already-in-use':\r\n          errorMessage = 'El email ya está registrado';\r\n          break;\r\n        case 'auth/weak-password':\r\n          errorMessage = 'La contraseña debe tener al menos 6 caracteres';\r\n          break;\r\n        case 'auth/invalid-email':\r\n          errorMessage = 'Email inválido';\r\n          break;\r\n      }\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\r\n      if (currentUser) {\r\n        const additionalData = await fetchUserData(currentUser.uid);\r\n        const userInfo = {\r\n          ...currentUser,\r\n          role: additionalData?.role || 'user',\r\n          name: additionalData?.name || currentUser.email.split('@')[0]\r\n        };\r\n        setUser(userInfo);\r\n        setUserData(additionalData);\r\n        fetchAllUsers();\r\n      } else {\r\n        setUser(null);\r\n        setUserData(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const value = {\r\n    user,\r\n    userData,\r\n    users: usersList,\r\n    loading,\r\n    login,\r\n    logout,\r\n    register,\r\n    fetchAllUsers,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.role === 'admin',\r\n    refreshUsers: fetchAllUsers\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}