{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Didi\\\\login-react\\\\src\\\\auth\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { auth, db, doc, setDoc, getDoc, signInWithEmailAndPassword, signOut, createUserWithEmailAndPassword, onAuthStateChanged } from '../firebase/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchUserData = async uid => {\n    try {\n      console.log(`[fetchUserData] Buscando datos para UID: ${uid}`);\n      const userDocRef = doc(db, 'users', uid);\n      const userDoc = await getDoc(userDocRef);\n      if (!userDoc.exists()) {\n        console.error(`[fetchUserData] No existe documento para UID: ${uid}`);\n        return null;\n      }\n      const data = userDoc.data();\n      console.log('[fetchUserData] Datos encontrados:', data);\n\n      // Validación estricta de campos\n      if (!data.email || !data.name || !data.lastName) {\n        console.error('[fetchUserData] Documento existe pero falta información requerida');\n        return null;\n      }\n      return {\n        name: data.name,\n        lastName: data.lastName,\n        role: data.role || 'user',\n        email: data.email\n      };\n    } catch (error) {\n      console.error(`[fetchUserData] Error al obtener datos:`, error);\n      return null;\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      console.log('[login] Iniciando sesión con email:', email);\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const uid = userCredential.user.uid;\n      console.log('[login] Usuario autenticado. UID:', uid);\n      const additionalData = await fetchUserData(uid);\n      if (!additionalData) {\n        throw new Error(\"No se encontraron datos adicionales del usuario\");\n      }\n\n      // Verificación crítica: email debe coincidir\n      if (additionalData.email !== email) {\n        console.error(`[login] Discrepancia de emails: \n          Auth=${email}, \n          Firestore=${additionalData.email}`);\n        throw new Error(\"Inconsistencia en los datos del usuario\");\n      }\n      const userWithData = {\n        uid: uid,\n        email: email,\n        name: additionalData.name,\n        lastName: additionalData.lastName,\n        role: additionalData.role\n      };\n      console.log('[login] Usuario autenticado con datos:', userWithData);\n      return {\n        success: true,\n        user: userWithData\n      };\n    } catch (error) {\n      console.error('[login] Error durante login:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      window.location.href = '/';\n    } catch (error) {\n      console.error(\"Error al cerrar sesión:\", error);\n    }\n  };\n  const register = async (email, password, userData) => {\n    try {\n      console.log('[register] Registrando nuevo usuario:', email);\n\n      // Validación de datos\n      if (!email || !password || !userData.name || !userData.lastName) {\n        throw new Error(\"Todos los campos son obligatorios\");\n      }\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const uid = userCredential.user.uid;\n      console.log('[register] UID asignado:', uid);\n      const userDoc = {\n        email: email,\n        name: userData.name.trim(),\n        lastName: userData.lastName.trim(),\n        role: userData.role || 'user',\n        createdAt: new Date().toISOString()\n      };\n\n      // Guardar en Firestore con UID como ID de documento\n      console.log('[register] Guardando en Firestore...');\n      await setDoc(doc(db, 'users', uid), userDoc);\n\n      // Verificación estricta\n      const savedDoc = await getDoc(doc(db, 'users', uid));\n      if (!savedDoc.exists()) {\n        throw new Error(\"No se pudo verificar el registro en Firestore\");\n      }\n      console.log('[register] Usuario registrado correctamente:', {\n        uid: uid,\n        ...userDoc\n      });\n      return {\n        success: true,\n        user: {\n          uid: uid,\n          email: email,\n          name: userData.name.trim(),\n          lastName: userData.lastName.trim(),\n          role: userData.role || 'user'\n        }\n      };\n    } catch (error) {\n      console.error('[register] Error en registro:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async currentUser => {\n      console.log('[onAuthStateChanged] Estado cambiado:', currentUser ? currentUser.uid : 'null');\n      if (currentUser) {\n        const additionalData = await fetchUserData(currentUser.uid);\n        console.log('[onAuthStateChanged] Datos adicionales:', additionalData);\n        if (additionalData) {\n          // Verificación de coherencia\n          if (additionalData.email !== currentUser.email) {\n            console.error('[onAuthStateChanged] Email no coincide!');\n            setUser(null);\n            setUserData(null);\n          } else {\n            const completeUser = {\n              uid: currentUser.uid,\n              email: currentUser.email,\n              name: additionalData.name,\n              lastName: additionalData.lastName,\n              role: additionalData.role\n            };\n            setUser(completeUser);\n            setUserData(additionalData);\n          }\n        } else {\n          setUser(null);\n          setUserData(null);\n        }\n      } else {\n        setUser(null);\n        setUserData(null);\n      }\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n  const value = {\n    user,\n    userData,\n    loading,\n    login,\n    logout,\n    register,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"4Lvrj5jq4weTYzI57B4yrS0C4B0=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","auth","db","doc","setDoc","getDoc","signInWithEmailAndPassword","signOut","createUserWithEmailAndPassword","onAuthStateChanged","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","userData","setUserData","loading","setLoading","fetchUserData","uid","console","log","userDocRef","userDoc","exists","error","data","email","name","lastName","role","login","password","userCredential","additionalData","Error","userWithData","success","message","logout","window","location","href","register","trim","createdAt","Date","toISOString","savedDoc","unsubscribe","currentUser","completeUser","value","isAuthenticated","isAdmin","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Didi/login-react/src/auth/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { \r\n  auth,\r\n  db,\r\n  doc,\r\n  setDoc,\r\n  getDoc,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged\r\n} from '../firebase/config';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [userData, setUserData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchUserData = async (uid) => {\r\n    try {\r\n      console.log(`[fetchUserData] Buscando datos para UID: ${uid}`);\r\n      const userDocRef = doc(db, 'users', uid);\r\n      const userDoc = await getDoc(userDocRef);\r\n      \r\n      if (!userDoc.exists()) {\r\n        console.error(`[fetchUserData] No existe documento para UID: ${uid}`);\r\n        return null;\r\n      }\r\n      \r\n      const data = userDoc.data();\r\n      console.log('[fetchUserData] Datos encontrados:', data);\r\n      \r\n      // Validación estricta de campos\r\n      if (!data.email || !data.name || !data.lastName) {\r\n        console.error('[fetchUserData] Documento existe pero falta información requerida');\r\n        return null;\r\n      }\r\n      \r\n      return {\r\n        name: data.name,\r\n        lastName: data.lastName,\r\n        role: data.role || 'user',\r\n        email: data.email\r\n      };\r\n    } catch (error) {\r\n      console.error(`[fetchUserData] Error al obtener datos:`, error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      console.log('[login] Iniciando sesión con email:', email);\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const uid = userCredential.user.uid;\r\n      console.log('[login] Usuario autenticado. UID:', uid);\r\n      \r\n      const additionalData = await fetchUserData(uid);\r\n      \r\n      if (!additionalData) {\r\n        throw new Error(\"No se encontraron datos adicionales del usuario\");\r\n      }\r\n\r\n      // Verificación crítica: email debe coincidir\r\n      if (additionalData.email !== email) {\r\n        console.error(`[login] Discrepancia de emails: \r\n          Auth=${email}, \r\n          Firestore=${additionalData.email}`);\r\n        throw new Error(\"Inconsistencia en los datos del usuario\");\r\n      }\r\n\r\n      const userWithData = {\r\n        uid: uid,\r\n        email: email,\r\n        name: additionalData.name,\r\n        lastName: additionalData.lastName,\r\n        role: additionalData.role\r\n      };\r\n\r\n      console.log('[login] Usuario autenticado con datos:', userWithData);\r\n      return { \r\n        success: true, \r\n        user: userWithData\r\n      };\r\n    } catch (error) {\r\n      console.error('[login] Error durante login:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      window.location.href = '/';\r\n    } catch (error) {\r\n      console.error(\"Error al cerrar sesión:\", error);\r\n    }\r\n  };\r\n\r\n  const register = async (email, password, userData) => {\r\n    try {\r\n      console.log('[register] Registrando nuevo usuario:', email);\r\n      \r\n      // Validación de datos\r\n      if (!email || !password || !userData.name || !userData.lastName) {\r\n        throw new Error(\"Todos los campos son obligatorios\");\r\n      }\r\n\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      const uid = userCredential.user.uid;\r\n      console.log('[register] UID asignado:', uid);\r\n      \r\n      const userDoc = {\r\n        email: email,\r\n        name: userData.name.trim(),\r\n        lastName: userData.lastName.trim(),\r\n        role: userData.role || 'user',\r\n        createdAt: new Date().toISOString()\r\n      };\r\n\r\n      // Guardar en Firestore con UID como ID de documento\r\n      console.log('[register] Guardando en Firestore...');\r\n      await setDoc(doc(db, 'users', uid), userDoc);\r\n\r\n      // Verificación estricta\r\n      const savedDoc = await getDoc(doc(db, 'users', uid));\r\n      if (!savedDoc.exists()) {\r\n        throw new Error(\"No se pudo verificar el registro en Firestore\");\r\n      }\r\n\r\n      console.log('[register] Usuario registrado correctamente:', {\r\n        uid: uid,\r\n        ...userDoc\r\n      });\r\n\r\n      return { \r\n        success: true, \r\n        user: {\r\n          uid: uid,\r\n          email: email,\r\n          name: userData.name.trim(),\r\n          lastName: userData.lastName.trim(),\r\n          role: userData.role || 'user'\r\n        } \r\n      };\r\n    } catch (error) {\r\n      console.error('[register] Error en registro:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\r\n      console.log('[onAuthStateChanged] Estado cambiado:', currentUser ? currentUser.uid : 'null');\r\n      \r\n      if (currentUser) {\r\n        const additionalData = await fetchUserData(currentUser.uid);\r\n        console.log('[onAuthStateChanged] Datos adicionales:', additionalData);\r\n        \r\n        if (additionalData) {\r\n          // Verificación de coherencia\r\n          if (additionalData.email !== currentUser.email) {\r\n            console.error('[onAuthStateChanged] Email no coincide!');\r\n            setUser(null);\r\n            setUserData(null);\r\n          } else {\r\n            const completeUser = {\r\n              uid: currentUser.uid,\r\n              email: currentUser.email,\r\n              name: additionalData.name,\r\n              lastName: additionalData.lastName,\r\n              role: additionalData.role\r\n            };\r\n            \r\n            setUser(completeUser);\r\n            setUserData(additionalData);\r\n          }\r\n        } else {\r\n          setUser(null);\r\n          setUserData(null);\r\n        }\r\n      } else {\r\n        setUser(null);\r\n        setUserData(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const value = {\r\n    user,\r\n    userData,\r\n    loading,\r\n    login,\r\n    logout,\r\n    register,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.role === 'admin'\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}