{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Didi\\\\login-react\\\\src\\\\auth\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { loginService } from './loginService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [users, setUsers] = useState([{\n    username: \"admin\",\n    password: \"12345\",\n    name: \"Administrador\",\n    role: \"admin\",\n    lastLogin: null\n  }, {\n    username: \"user1\",\n    password: \"54321\",\n    name: \"Usuario Demo\",\n    role: \"user\",\n    lastLogin: null\n  }]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const login = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      // 1. Registrar el login en Firebase\n      const loginResult = await loginService.recordLogin(userData.username);\n      if (!loginResult.success) {\n        console.error(\"Error registrando login:\", loginResult.error);\n        // Continuamos con el login a pesar del error en el registro\n      }\n\n      // 2. Actualizar estado local\n      const updatedUser = {\n        ...userData,\n        lastLogin: new Date().toISOString()\n      };\n\n      // Actualizar en la lista de usuarios\n      setUsers(prevUsers => prevUsers.map(u => u.username === userData.username ? updatedUser : u));\n\n      // Establecer usuario actual\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error(\"Error en el proceso de login:\", error);\n      setError(error.message);\n      return {\n        success: false,\n        error: \"Error al iniciar sesi칩n. Intente nuevamente.\"\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  const isAuthenticated = () => {\n    const storedUser = localStorage.getItem('user');\n    return user !== null || storedUser !== null;\n  };\n  const isAdmin = () => {\n    const currentUser = user || JSON.parse(localStorage.getItem('user'));\n    return (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) === 'admin';\n  };\n  const createUser = async newUser => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Validar que el usuario no exista\n      if (users.some(u => u.username === newUser.username)) {\n        throw new Error(\"El nombre de usuario ya existe\");\n      }\n      const userToAdd = {\n        ...newUser,\n        role: 'user',\n        lastLogin: null\n      };\n      setUsers(prevUsers => [...prevUsers, userToAdd]);\n      return {\n        success: true\n      };\n    } catch (error) {\n      setError(error.message);\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Cargar usuario desde localStorage al iniciar\n  useEffect(() => {\n    const loadUser = async () => {\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        try {\n          const parsedUser = JSON.parse(storedUser);\n          setUser(parsedUser);\n\n          // Registrar el acceso autom치tico en Firebase\n          await loginService.recordLogin(parsedUser.username);\n        } catch (error) {\n          console.error(\"Error cargando usuario:\", error);\n          localStorage.removeItem('user');\n        }\n      }\n    };\n    loadUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      users,\n      login,\n      logout,\n      isAuthenticated,\n      isAdmin,\n      createUser,\n      loading,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"yURuDMncNaEQVzShU3qdReiBzYo=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","loginService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","users","setUsers","username","password","name","role","lastLogin","loading","setLoading","error","setError","login","userData","loginResult","recordLogin","success","console","updatedUser","Date","toISOString","prevUsers","map","u","localStorage","setItem","JSON","stringify","message","logout","removeItem","isAuthenticated","storedUser","getItem","isAdmin","currentUser","parse","createUser","newUser","some","Error","userToAdd","loadUser","parsedUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Didi/login-react/src/auth/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { loginService } from './loginService';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [users, setUsers] = useState([\r\n    { username: \"admin\", password: \"12345\", name: \"Administrador\", role: \"admin\", lastLogin: null },\r\n    { username: \"user1\", password: \"54321\", name: \"Usuario Demo\", role: \"user\", lastLogin: null }\r\n  ]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const login = async (userData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // 1. Registrar el login en Firebase\r\n      const loginResult = await loginService.recordLogin(userData.username);\r\n      \r\n      if (!loginResult.success) {\r\n        console.error(\"Error registrando login:\", loginResult.error);\r\n        // Continuamos con el login a pesar del error en el registro\r\n      }\r\n\r\n      // 2. Actualizar estado local\r\n      const updatedUser = {\r\n        ...userData,\r\n        lastLogin: new Date().toISOString()\r\n      };\r\n      \r\n      // Actualizar en la lista de usuarios\r\n      setUsers(prevUsers => \r\n        prevUsers.map(u => \r\n          u.username === userData.username ? updatedUser : u\r\n        )\r\n      );\r\n      \r\n      // Establecer usuario actual\r\n      setUser(updatedUser);\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error(\"Error en el proceso de login:\", error);\r\n      setError(error.message);\r\n      return { \r\n        success: false, \r\n        error: \"Error al iniciar sesi칩n. Intente nuevamente.\" \r\n      };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const isAuthenticated = () => {\r\n    const storedUser = localStorage.getItem('user');\r\n    return user !== null || storedUser !== null;\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    const currentUser = user || JSON.parse(localStorage.getItem('user'));\r\n    return currentUser?.role === 'admin';\r\n  };\r\n\r\n  const createUser = async (newUser) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Validar que el usuario no exista\r\n      if (users.some(u => u.username === newUser.username)) {\r\n        throw new Error(\"El nombre de usuario ya existe\");\r\n      }\r\n      \r\n      const userToAdd = {\r\n        ...newUser,\r\n        role: 'user',\r\n        lastLogin: null\r\n      };\r\n      \r\n      setUsers(prevUsers => [...prevUsers, userToAdd]);\r\n      return { success: true };\r\n    } catch (error) {\r\n      setError(error.message);\r\n      return { success: false, error: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Cargar usuario desde localStorage al iniciar\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const storedUser = localStorage.getItem('user');\r\n      if (storedUser) {\r\n        try {\r\n          const parsedUser = JSON.parse(storedUser);\r\n          setUser(parsedUser);\r\n          \r\n          // Registrar el acceso autom치tico en Firebase\r\n          await loginService.recordLogin(parsedUser.username);\r\n        } catch (error) {\r\n          console.error(\"Error cargando usuario:\", error);\r\n          localStorage.removeItem('user');\r\n        }\r\n      }\r\n    };\r\n    \r\n    loadUser();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n      user, \r\n      users,\r\n      login, \r\n      logout, \r\n      isAuthenticated,\r\n      isAdmin,\r\n      createUser,\r\n      loading,\r\n      error,\r\n      setError\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,YAAY,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASQ,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CACjC;IAAEc,QAAQ,EAAE,OAAO;IAAEC,QAAQ,EAAE,OAAO;IAAEC,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAK,CAAC,EAC/F;IAAEJ,QAAQ,EAAE,OAAO;IAAEC,QAAQ,EAAE,OAAO;IAAEC,IAAI,EAAE,cAAc;IAAEC,IAAI,EAAE,MAAM;IAAEC,SAAS,EAAE;EAAK,CAAC,CAC9F,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMuB,KAAK,GAAG,MAAOC,QAAQ,IAAK;IAChCJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,MAAMG,WAAW,GAAG,MAAMtB,YAAY,CAACuB,WAAW,CAACF,QAAQ,CAACV,QAAQ,CAAC;MAErE,IAAI,CAACW,WAAW,CAACE,OAAO,EAAE;QACxBC,OAAO,CAACP,KAAK,CAAC,0BAA0B,EAAEI,WAAW,CAACJ,KAAK,CAAC;QAC5D;MACF;;MAEA;MACA,MAAMQ,WAAW,GAAG;QAClB,GAAGL,QAAQ;QACXN,SAAS,EAAE,IAAIY,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;;MAED;MACAlB,QAAQ,CAACmB,SAAS,IAChBA,SAAS,CAACC,GAAG,CAACC,CAAC,IACbA,CAAC,CAACpB,QAAQ,KAAKU,QAAQ,CAACV,QAAQ,GAAGe,WAAW,GAAGK,CACnD,CACF,CAAC;;MAED;MACAvB,OAAO,CAACkB,WAAW,CAAC;MACpBM,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACT,WAAW,CAAC,CAAC;MAEzD,OAAO;QAAEF,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAON,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDC,QAAQ,CAACD,KAAK,CAACkB,OAAO,CAAC;MACvB,OAAO;QACLZ,OAAO,EAAE,KAAK;QACdN,KAAK,EAAE;MACT,CAAC;IACH,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMoB,MAAM,GAAGA,CAAA,KAAM;IACnB7B,OAAO,CAAC,IAAI,CAAC;IACbwB,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,UAAU,GAAGR,YAAY,CAACS,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOlC,IAAI,KAAK,IAAI,IAAIiC,UAAU,KAAK,IAAI;EAC7C,CAAC;EAED,MAAME,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMC,WAAW,GAAGpC,IAAI,IAAI2B,IAAI,CAACU,KAAK,CAACZ,YAAY,CAACS,OAAO,CAAC,MAAM,CAAC,CAAC;IACpE,OAAO,CAAAE,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE7B,IAAI,MAAK,OAAO;EACtC,CAAC;EAED,MAAM+B,UAAU,GAAG,MAAOC,OAAO,IAAK;IACpC7B,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,IAAIV,KAAK,CAACsC,IAAI,CAAChB,CAAC,IAAIA,CAAC,CAACpB,QAAQ,KAAKmC,OAAO,CAACnC,QAAQ,CAAC,EAAE;QACpD,MAAM,IAAIqC,KAAK,CAAC,gCAAgC,CAAC;MACnD;MAEA,MAAMC,SAAS,GAAG;QAChB,GAAGH,OAAO;QACVhC,IAAI,EAAE,MAAM;QACZC,SAAS,EAAE;MACb,CAAC;MAEDL,QAAQ,CAACmB,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAEoB,SAAS,CAAC,CAAC;MAChD,OAAO;QAAEzB,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACkB,OAAO,CAAC;MACvB,OAAO;QAAEZ,OAAO,EAAE,KAAK;QAAEN,KAAK,EAAEA,KAAK,CAACkB;MAAQ,CAAC;IACjD,CAAC,SAAS;MACRnB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACAlB,SAAS,CAAC,MAAM;IACd,MAAMmD,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMV,UAAU,GAAGR,YAAY,CAACS,OAAO,CAAC,MAAM,CAAC;MAC/C,IAAID,UAAU,EAAE;QACd,IAAI;UACF,MAAMW,UAAU,GAAGjB,IAAI,CAACU,KAAK,CAACJ,UAAU,CAAC;UACzChC,OAAO,CAAC2C,UAAU,CAAC;;UAEnB;UACA,MAAMnD,YAAY,CAACuB,WAAW,CAAC4B,UAAU,CAACxC,QAAQ,CAAC;QACrD,CAAC,CAAC,OAAOO,KAAK,EAAE;UACdO,OAAO,CAACP,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;UAC/Cc,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;QACjC;MACF;IACF,CAAC;IAEDY,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhD,OAAA,CAACC,WAAW,CAACiD,QAAQ;IAACC,KAAK,EAAE;MAC3B9C,IAAI;MACJE,KAAK;MACLW,KAAK;MACLiB,MAAM;MACNE,eAAe;MACfG,OAAO;MACPG,UAAU;MACV7B,OAAO;MACPE,KAAK;MACLC;IACF,CAAE;IAAAd,QAAA,EACCA;EAAQ;IAAAiD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACnD,EAAA,CAlIeF,YAAY;AAAAsD,EAAA,GAAZtD,YAAY;AAoI5B,OAAO,SAASuD,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,OAAO9D,UAAU,CAACK,WAAW,CAAC;AAChC;AAACyD,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}