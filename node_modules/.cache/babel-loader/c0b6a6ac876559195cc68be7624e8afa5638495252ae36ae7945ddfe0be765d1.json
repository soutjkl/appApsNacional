{"ast":null,"code":"import { db, auth } from '../firebase/config';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { doc, setDoc, serverTimestamp } from 'firebase/firestore';\nexport const authService = {\n  async register(email, password, userData) {\n    try {\n      // 1. Crear usuario en Authentication\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n\n      // 2. Guardar datos adicionales en Firestore\n      await setDoc(doc(db, \"users\", userCredential.user.uid), {\n        ...userData,\n        email,\n        createdAt: serverTimestamp(),\n        lastLogin: serverTimestamp(),\n        role: \"user\" // Rol por defecto\n      });\n      return {\n        success: true,\n        user: userCredential.user\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  async login(email, password) {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n\n      // Actualizar último login\n      await setDoc(doc(db, \"users\", userCredential.user.uid), {\n        lastLogin: serverTimestamp()\n      }, {\n        merge: true\n      });\n      return {\n        success: true,\n        user: userCredential.user\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  async logout() {\n    try {\n      await signOut(auth);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n};","map":{"version":3,"names":["db","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","doc","setDoc","serverTimestamp","authService","register","email","password","userData","userCredential","user","uid","createdAt","lastLogin","role","success","error","message","login","merge","logout"],"sources":["C:/Users/Didi/login-react/src/auth/AuthContext.js"],"sourcesContent":["import { db, auth } from '../firebase/config';\r\nimport { \r\n  createUserWithEmailAndPassword, \r\n  signInWithEmailAndPassword,\r\n  signOut\r\n} from 'firebase/auth';\r\nimport { doc, setDoc, serverTimestamp } from 'firebase/firestore';\r\n\r\nexport const authService = {\r\n  async register(email, password, userData) {\r\n    try {\r\n      // 1. Crear usuario en Authentication\r\n      const userCredential = await createUserWithEmailAndPassword(\r\n        auth, \r\n        email, \r\n        password\r\n      );\r\n      \r\n      // 2. Guardar datos adicionales en Firestore\r\n      await setDoc(doc(db, \"users\", userCredential.user.uid), {\r\n        ...userData,\r\n        email,\r\n        createdAt: serverTimestamp(),\r\n        lastLogin: serverTimestamp(),\r\n        role: \"user\" // Rol por defecto\r\n      });\r\n      \r\n      return { success: true, user: userCredential.user };\r\n    } catch (error) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  },\r\n\r\n  async login(email, password) {\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(\r\n        auth, \r\n        email, \r\n        password\r\n      );\r\n      \r\n      // Actualizar último login\r\n      await setDoc(\r\n        doc(db, \"users\", userCredential.user.uid),\r\n        { lastLogin: serverTimestamp() },\r\n        { merge: true }\r\n      );\r\n      \r\n      return { success: true, user: userCredential.user };\r\n    } catch (error) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  },\r\n\r\n  async logout() {\r\n    try {\r\n      await signOut(auth);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  }\r\n};"],"mappings":"AAAA,SAASA,EAAE,EAAEC,IAAI,QAAQ,oBAAoB;AAC7C,SACEC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,QACF,eAAe;AACtB,SAASC,GAAG,EAAEC,MAAM,EAAEC,eAAe,QAAQ,oBAAoB;AAEjE,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,QAAQA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IACxC,IAAI;MACF;MACA,MAAMC,cAAc,GAAG,MAAMX,8BAA8B,CACzDD,IAAI,EACJS,KAAK,EACLC,QACF,CAAC;;MAED;MACA,MAAML,MAAM,CAACD,GAAG,CAACL,EAAE,EAAE,OAAO,EAAEa,cAAc,CAACC,IAAI,CAACC,GAAG,CAAC,EAAE;QACtD,GAAGH,QAAQ;QACXF,KAAK;QACLM,SAAS,EAAET,eAAe,CAAC,CAAC;QAC5BU,SAAS,EAAEV,eAAe,CAAC,CAAC;QAC5BW,IAAI,EAAE,MAAM,CAAC;MACf,CAAC,CAAC;MAEF,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAEL,IAAI,EAAED,cAAc,CAACC;MAAK,CAAC;IACrD,CAAC,CAAC,OAAOM,KAAK,EAAE;MACd,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACC;MAAQ,CAAC;IACjD;EACF,CAAC;EAED,MAAMC,KAAKA,CAACZ,KAAK,EAAEC,QAAQ,EAAE;IAC3B,IAAI;MACF,MAAME,cAAc,GAAG,MAAMV,0BAA0B,CACrDF,IAAI,EACJS,KAAK,EACLC,QACF,CAAC;;MAED;MACA,MAAML,MAAM,CACVD,GAAG,CAACL,EAAE,EAAE,OAAO,EAAEa,cAAc,CAACC,IAAI,CAACC,GAAG,CAAC,EACzC;QAAEE,SAAS,EAAEV,eAAe,CAAC;MAAE,CAAC,EAChC;QAAEgB,KAAK,EAAE;MAAK,CAChB,CAAC;MAED,OAAO;QAAEJ,OAAO,EAAE,IAAI;QAAEL,IAAI,EAAED,cAAc,CAACC;MAAK,CAAC;IACrD,CAAC,CAAC,OAAOM,KAAK,EAAE;MACd,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACC;MAAQ,CAAC;IACjD;EACF,CAAC;EAED,MAAMG,MAAMA,CAAA,EAAG;IACb,IAAI;MACF,MAAMpB,OAAO,CAACH,IAAI,CAAC;MACnB,OAAO;QAAEkB,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACC;MAAQ,CAAC;IACjD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}